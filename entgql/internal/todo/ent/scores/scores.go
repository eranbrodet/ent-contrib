// Copyright 2019-present Facebook
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package scores

const (
	// Label holds the string label denoting the scores type in the database.
	Label = "scores"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeTodo holds the string denoting the todo edge name in mutations.
	EdgeTodo = "todo"
	// EdgeScoresV1 holds the string denoting the scoresv1 edge name in mutations.
	EdgeScoresV1 = "ScoresV1"
	// EdgeScoresV2 holds the string denoting the scoresv2 edge name in mutations.
	EdgeScoresV2 = "ScoresV2"
	// Table holds the table name of the scores in the database.
	Table = "scores"
	// TodoTable is the table that holds the todo relation/edge.
	TodoTable = "todos"
	// TodoInverseTable is the table name for the Todo entity.
	// It exists in this package in order to avoid circular dependency with the "todo" package.
	TodoInverseTable = "todos"
	// TodoColumn is the table column denoting the todo relation/edge.
	TodoColumn = "scores_todo"
	// ScoresV1Table is the table that holds the ScoresV1 relation/edge.
	ScoresV1Table = "scores"
	// ScoresV1InverseTable is the table name for the ScoresV1 entity.
	// It exists in this package in order to avoid circular dependency with the "scoresv1" package.
	ScoresV1InverseTable = "scores_v1s"
	// ScoresV1Column is the table column denoting the ScoresV1 relation/edge.
	ScoresV1Column = "scores_v1_scores"
	// ScoresV2Table is the table that holds the ScoresV2 relation/edge.
	ScoresV2Table = "scores"
	// ScoresV2InverseTable is the table name for the ScoresV2 entity.
	// It exists in this package in order to avoid circular dependency with the "scoresv2" package.
	ScoresV2InverseTable = "scores_v2s"
	// ScoresV2Column is the table column denoting the ScoresV2 relation/edge.
	ScoresV2Column = "scores_v2_scores"
)

// Columns holds all SQL columns for scores fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "scores"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"scores_v1_scores",
	"scores_v2_scores",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
