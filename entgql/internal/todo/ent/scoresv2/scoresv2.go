// Copyright 2019-present Facebook
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package scoresv2

const (
	// Label holds the string label denoting the scoresv2 type in the database.
	Label = "scores_v2"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldScore holds the string denoting the score field in the database.
	FieldScore = "score"
	// EdgeScores holds the string denoting the scores edge name in mutations.
	EdgeScores = "Scores"
	// Table holds the table name of the scoresv2 in the database.
	Table = "scores_v2s"
	// ScoresTable is the table that holds the Scores relation/edge.
	ScoresTable = "scores"
	// ScoresInverseTable is the table name for the Scores entity.
	// It exists in this package in order to avoid circular dependency with the "scores" package.
	ScoresInverseTable = "scores"
	// ScoresColumn is the table column denoting the Scores relation/edge.
	ScoresColumn = "scores_v2_scores"
)

// Columns holds all SQL columns for scoresv2 fields.
var Columns = []string{
	FieldID,
	FieldScore,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
